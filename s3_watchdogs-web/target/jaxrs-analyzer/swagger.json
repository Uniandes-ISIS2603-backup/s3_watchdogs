
{
    "swagger": "2.0",
    "info": {
        "version": "1.0",
        "title": "watchdogs-web"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "schemes": [
        "http"
    ],
    "paths": {
        "/cities": {
            "get": {
                "description": "<h1>GET /api/cities : Obtener todas las ciudades.</h1>\n \n <pre>Busca y devuelve todas las ciudades que existen en la aplicacion.\n \n Codigos de respuesta:\n <code style=\"color: mediumseagreen; background-color: #eaffe0;\">\n 200 OK Devuelve todas las ciudades de la aplicacion.</code> \n </pre>",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CityDetailDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "<h1>POST /api/cities : Crear una ciudad.</h1>\n \n <pre>Cuerpo de petición: JSON {@link CityDetailDTO}.\n \n Crea una nueva ciudad con la informacion que se recibe en el cuerpo \n de la petición y se regresa un objeto identico con un id auto-generado \n por la base de datos.\n \n Codigos de respuesta:\n <code style=\"color: mediumseagreen; background-color: #eaffe0;\">\n 200 OK Creó la nueva ciudad .\n </code>\n <code style=\"color: #c7254e; background-color: #f9f2f4;\">\n 412 Precodition Failed: Ya existe la ciudad.\n </code>\n </pre>",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CityDetailDTO"
                        },
                        "description": "{@link CityDetailDTO} - La ciudad que se desea guardar."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "$ref": "#/definitions/CityDetailDTO"
                        }
                    }
                }
            }
        },
        "/cities/{id}": {
            "get": {
                "description": "<h1>GET /api/cities/{id} : Obtener ciudad por id.</h1>\n \n <pre>Busca la ciudad con el id asociado recibido en la URL y la devuelve.\n \n Codigos de respuesta:\n <code style=\"color: mediumseagreen; background-color: #eaffe0;\">\n 200 OK Devuelve la ciudad correspondiente al id.\n </code> \n <code style=\"color: #c7254e; background-color: #f9f2f4;\">\n 404 Not Found No existe una ciudad con el id dado.\n </code> \n </pre>",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Identificador de la ciudad que se esta buscando. Este debe ser una cadena de dígitos."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "$ref": "#/definitions/CityDetailDTO"
                        }
                    }
                }
            },
            "put": {
                "description": "<h1>PUT /api/cities/{id} : Actualizar ciudad con el id dado.</h1>\n <pre>Cuerpo de petición: JSON {@link CityDetailDTO}.\n \n Actualiza la ciudad con el id recibido en la URL con la informacion que se recibe en el cuerpo de la petición.\n \n Codigos de respuesta:\n <code style=\"color: mediumseagreen; background-color: #eaffe0;\">\n 200 OK Actualiza la ciudad con el id dado con la información enviada como parámetro. Retorna un objeto identico.</code> \n <code style=\"color: #c7254e; background-color: #f9f2f4;\">\n 404 Not Found. No existe una ciudad con el id dado.\n </code> \n </pre>",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Identificador de la ciudad que se desea actualizar.Este debe ser una cadena de dígitos."
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CityDetailDTO"
                        },
                        "description": "{@link CityDetailDTO} La ciudad que se desea guardar."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "$ref": "#/definitions/CityDetailDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "<h1>DELETE /api/cities/{id} : Borrar ciudad por id.</h1>\n \n <pre>Borra la ciudad con el id asociado recibido en la URL.\n \n Códigos de respuesta:<br>\n <code style=\"color: mediumseagreen; background-color: #eaffe0;\">\n 200 OK Elimina la ciudad correspondiente al id dado.</code>\n <code style=\"color: #c7254e; background-color: #f9f2f4;\">\n 404 Not Found. No existe una ciudad con el id dado.\n </code>\n </pre>",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Identificador de la ciudad que se desea borrar. Este debe ser una cadena de dígitos."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CityDetailDTO": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "zipcode": {
                    "type": "string"
                }
            }
        }
    }
}